generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  fullName    String
  trainName   String?
  isAdmin     Boolean  @default(false)
  currentStep Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  answers     Answer[]

  @@map("users")
}

model Question {
  id             String    @id @default(cuid())
  questionNumber Int       @unique
  title          String
  content        String
  description    String
  deadline       DateTime
  points         Int       @default(100)
  bonusPoints    Int       @default(50)
  isActive       Boolean   @default(false)
  isReleased     Boolean   @default(false)
  releaseDate    DateTime?
  releasedAt     DateTime?
  // Additional fields to support module/topic concepts
  moduleNumber   Int?      // Optional: group questions into modules
  topicNumber    Int?      // Optional: sub-ordering within modules
  category       String?   // Optional: categorization (e.g., "Adventure", "Problem Solving")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  answers        Answer[]

  @@map("questions")
}

model Answer {
  id                   String    @id @default(cuid())
  content              String
  status               String    @default("PENDING")
  submittedAt          DateTime  @default(now())
  reviewedAt           DateTime?
  reviewedBy           String?
  feedback             String?
  pointsAwarded        Int?
  attachmentFileName   String?   // Original filename of the attachment
  attachmentFilePath   String?   // Server path to the uploaded file
  attachmentFileSize   Int?      // File size in bytes
  attachmentMimeType   String?   // MIME type of the file
  userId               String
  questionId           String
  question             Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("answers")
}

model GameConfig {
  id                           String   @id @default("singleton")
  questionReleaseIntervalHours Int      @default(48)
  totalQuestions               Int      @default(12)
  gameStartDate                DateTime @default(now())
  updatedAt                    DateTime @updatedAt

  @@map("game_config")
}
